use unTarAll.sh with tee command:
./unTarAll.sh | tee unTar.log

tree -s --sort=size # -s display size of each file; --sort=size sort by size

find . -name '*.pdf' # find ab der aktuellen directory alle pdf dateien rekursiv abwÃ¤rts

tree -s --sort=size | grep .pdf # -s display size of each pdf file; --sort=size sort by size

find . -type f -name '*.pdf' -delete # WARNING: deletes all .pdf files in the current and all subdirectories

find . -type d -name 'jdk-8u45-docs-all' -exec  echo {} \; -exec rm -fr {} + # WARNING: delete all 'jdk-8u45-docs-all' directories and all ! their subcontent

find . -type f -name '*DASH*' -delete
find . -type d -name 'Lupo_PenSuite*' -exec  echo {} \; -exec rm -fr {} + #  # WARNING: delete all directories starting with 'Lupo_PenSuite' and all ! their subcontent

find . -type d -name 'Lupo_PenSuite*' -exec rm -fr {} \; -exec echo {} + # WARNING: first delete then report but with errors...?

find . -type d -name 'Lupo_PenSuite*' -exec rm -v -fr {} \; -exec echo {} + # WARNING: deletion and list removed files

# idea: monitor removing big directory including all subdirectories with pv, but that is somehow difficult


find . -type d \( -name 'jdk-*' -o -name 'eclipseLin*' \) # find jdk-* or (-o) eclipseLin* directories # realizes an or operation, note the \( and \)

ls -d */ > directories.sh # list current directory entries to file directories.sh; now use vim and Ctrl+v mode to edit multiple lines at once, ie. insert './vv.sh important/' at the beginning of the line



tar -cf - importantsRest/ | pv > importantsRest.tar # monitor tar process; see https://www.howtogeek.com/428654/how-to-monitor-the-progress-of-linux-commands-with-pv-and-progress/

find . -type f -name 'import*.tar' # find all import*.tar files in all subdirectories

pv 1.tar | cmp 6.tar # compare two files and monitor comparsion

du -sh ./dir # display size of ./dir and of all subdiretories, in human readable form (-h) and only display the total sum (-s)

du -h --max-depth=2 ./important13112015/important13112015/programmingMobile/javaMobile/jdk-8u45-docs-all/docs/ # summarize subdired size of all subdirectories of level 2

tree -a # count number of all files and directories and display them in a tree

find . -type f | wc -l # count all files in the current directory and its subdirectories; note: does not count subdirectories as entries

find . -maxdepth 1 -type f | wc -l # count only the files in the current directory; note: maxdepth can vary

find . -type f -name '*DASH*' -delete # WARNING: deletes all files containing DASH below the current directory

echo $HOME # output home directory
echo $PATH # output path settings, can be extended with :

export PATH=$PATH:/place/with/the/file # extend PATH-Variable by /place/with/the/file; note: added path can be ~/someHomeDiretoryToo
PATH=$PATH:/place/with/the/file # does the  same and allows for tab completion

# put aliases in .bash_aliases in the above directory

find . -maxdepth 1 -type l -ls # list all softlinks and their destinations (in the current directory; see maxdepth)

lscpu # look under CPU op-mode(s) if your cpu support 64 bit

find . -type d -empty # list all empty directories

find . -type d -empty -delete # WARNING: delete all empty directories

source addToPath.sh # to expand the current PATH-variable, otherwise sh file runs in subshell

fdupes -rS ./ # find all duplicate files recursively with size; use option -d to ask for deletion

ls -l | tee tmp.txt # lsit all files and copy standard output to file tmp.txt
note: useful for long directory operations like fdupdes

find . -type f -name '*.tar' -exec ls -l {} \; # list all tar files in all subdirectories

tar -cfv dest.tar [file and folder list] # stores all files and folders in dest.tar

tar xvf source.tar # extract the source.tar file

find tmp/ -type f -name '*.tar' -exec tar xvf {} \; # extract all tar files inside tmp/ and its subdirs to the current directory.
WARNING: overrides existing files

find tmp/ -type f -name '*.tar' -exec tar xvf {} --one-top-level \; # extract all tar files inside tmp and its subdirs to the current directory with named folder
WARNING: overrides existing files

find ./*.* -type f -ls |grep 2015 # find all files last modified 2015

source ~/bash/directoryWork/addToPath.sh # change current path variable with source; otherwise bash would call it in a subshell and exit this shell after the script

find -type f -name '*ubuntu*.*' -exec rm -i {} \; # ask before removing for every founded file

fdupes tmp/ tmp2/ # compare all files in both directories tmp/ and tmp2/

zip -F broken.zip --out fixed.zip # repair broken.zip to fixed.zip WARNING: fixed.zip will be overridden

export PATH=$PATH:/tmp;  # add /tmp to the path-variable

pv fileOne.tar | cmp -l fileTwo.tar # compare two files verbose with progress bar

fdupes -rSdN ./ | tee deleted.txt # deletes all but the first file in each set and logs deletion to deleted.txt
find ./ -type d -empty | tee emptyDirs.txt # log all empty directories to emptyDirs.txt
find ./ -type d -empty -delete # delete all empty directories

man -k pipe # search all man pages for the keyword pipe

pv old.tar > new.tar # copy old.tar to new.tar with progress bar
